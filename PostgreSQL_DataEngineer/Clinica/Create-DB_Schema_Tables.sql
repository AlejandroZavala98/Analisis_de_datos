/* CREACIÓN DE BASE DE DATOS Y SCHEMA
*/
CREATE DATABASE "CLINICA_SSMX"
    WITH
    OWNER = postgres
    ENCODING = 'UTF8'
    LOCALE_PROVIDER = 'libc'
    CONNECTION LIMIT = -1
    IS_TEMPLATE = False;

CREATE SCHEMA CLINIC;

/* DOMINIOS EN POSTGRESQL
Los dominios son reglas que se aplican a un campo en una tabla.
Aplican la integridad de datos porque permiten que se introduzcan en el campo sólo aquellos valores especificados.
Se pueden ocupar expresiones regulares para verificar que se cumpla la estructura del campo deseada
*/

CREATE DOMAIN CLINIC.ID_PATIENT AS CHAR(6) NOT NULL
    CHECK (VALUE ~ '^[P]{1}[-]{1}\d{4}$'); -- Ex: P-0001

CREATE DOMAIN CLINIC.ID_DR_SPECIALIST AS CHAR(7) NOT NULL
    CHECK (VALUE ~ '^[ME]{2}[-]{1}\d{4}$'); -- Ex: ME-0002

CREATE DOMAIN CLINIC.ID_DATE AS CHAR(7) NOT NULL
    CHECK (VALUE ~ '^[CM]{2}[-]{1}\d{4}$'); -- Ex: CM-0008

-- CREACIÓN DE LAS TABLAS, CON BASE EN EL DIAGRAMA ANEXADO EN ./Resources_DB/ERD_Clinic.png


DROP TABLE IF EXISTS CLINIC.PATIENT CASCADE; -- NOT NECESSARY
CREATE TABLE IF NOT EXISTS CLINIC.PATIENT --PATIENT TABLE
(
ID_PATIENT CLINIC.ID_PATIENT,
ALL_NAMES VARCHAR(20) NOT NULL,
LAST_NAME VARCHAR(20) NOT NULL,
SEX CHAR(1),
BIRTHDAY DATE NOT NULL,
CITY VARCHAR(20) NOT NULL,
STATE_NM VARCHAR(20) NOT NULL,
PHONE_NBR CHAR(10),
PRIMARY KEY (ID_PATIENT)
);



DROP TABLE IF EXISTS CLINIC.SPECIALIST CASCADE;-- NOT NECESSARY
CREATE TABLE IF NOT EXISTS CLINIC.SPECIALIST --SPECIALIST TABLE
(
ID_DR_SPECIALIST CLINIC.ID_DR_SPECIALIST,
ALL_NAMES VARCHAR(20) NOT NULL,
LAST_NAME VARCHAR(20) NOT NULL,
SEX CHAR(1),
BIRTHDAY DATE NOT NULL,
SPECIALIST VARCHAR(30),
PRIMARY KEY (ID_DR_SPECIALIST)
);


DROP TABLE IF EXISTS CLINIC.DATE_MED CASCADE;-- NOT NECESSARY
CREATE TABLE IF NOT EXISTS CLINIC.DATE_MED --DATE MEDICAL TABLE
(
ID_DATE CLINIC.ID_DATE,
ID_PATIENT CLINIC.ID_PATIENT,
DATE_MED DATE,
DATE_HOUR TIME,
PRIMARY KEY (ID_DATE),
FOREIGN KEY (ID_PATIENT) REFERENCES CLINIC.PATIENT (ID_PATIENT)
ON UPDATE CASCADE ON DELETE CASCADE
);


DROP TABLE IF EXISTS CLINIC.DATE_MED_DETAILS CASCADE;-- NOT NECESSARY
CREATE TABLE IF NOT EXISTS CLINIC.DATE_MED_DETAILS --SCHEDULE DATE WITH DETAILS TABLE
(
ID_DATE CLINIC.ID_DATE,
ID_DR_SPECIALIST CLINIC.ID_DR_SPECIALIST,
DOCTOR_OFFICE VARCHAR(20),
DATE_MED DATE,
DATE_HOUR TIME,
TURN VARCHAR(10),
STATUS_DATE VARCHAR(10),
NOTES VARCHAR(100),
PRIMARY KEY (ID_DATE,ID_DR_SPECIALIST),
FOREIGN KEY (ID_DATE) REFERENCES CLINIC.DATE_MED (ID_DATE)
ON UPDATE CASCADE ON DELETE CASCADE,
FOREIGN KEY (ID_DR_SPECIALIST) REFERENCES CLINIC.SPECIALIST (ID_DR_SPECIALIST)
ON UPDATE CASCADE ON DELETE CASCADE
);



DROP TABLE IF EXISTS CLINIC.MED_RECORDS CASCADE;-- NOT NECESSARY
CREATE TABLE IF NOT EXISTS CLINIC.MED_RECORDS --MED_RECORDS TABLE
(
ID_PATIENT CLINIC.ID_PATIENT,
TYPE_BLOOD VARCHAR(10),
ALLERGY VARCHAR(50),
CHRONIC_CONDITION VARCHAR(50),
CREATION_DT TIMESTAMP,
PRIMARY KEY (ID_PATIENT),
FOREIGN KEY (ID_PATIENT) REFERENCES CLINIC.PATIENT (ID_PATIENT)
ON UPDATE CASCADE ON DELETE CASCADE
);


DROP TABLE IF EXISTS CLINIC.MED_RECORDS_DETAILS CASCADE;-- NOT NECESSARY
CREATE TABLE IF NOT EXISTS CLINIC.MED_RECORDS_DETAILS --MED_RECORDS_DETAILS TABLE
(
ID_NBR SERIAL NOT NULL,
ID_DR_SPECIALIST CLINIC.ID_DR_SPECIALIST,
ID_PATIENT CLINIC.ID_PATIENT,
AGE_NBR CHAR(3),
WEIGHT_NBR VARCHAR(3),
HEIGHT_NBR VARCHAR(4),
IMC_NBR CHAR(5),
LVL_WEIGHT VARCHAR(10),
BLOOD_PRESSURE CHAR(8),
MED_DIAGNOSTIC VARCHAR(150),
PRESCRIPTION VARCHAR(150),
CREATION_DT DATE,
PRIMARY KEY (ID_NBR),
FOREIGN KEY (ID_DR_SPECIALIST) REFERENCES CLINIC.SPECIALIST (ID_DR_SPECIALIST)
ON UPDATE CASCADE ON DELETE CASCADE,
FOREIGN KEY (ID_PATIENT) REFERENCES CLINIC.MED_RECORDS (ID_PATIENT)
ON UPDATE CASCADE ON DELETE CASCADE
);